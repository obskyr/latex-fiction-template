% This will be executed at the start of the preamble when using TeX4ebook /
% TeX4Ht.

% LTEX: enabled=false


% === Cuts ===

% By default, TeX4ebook cuts the output up into multiple files at `\part`s
% and `\chapter`s, et cetera. We want to be able to introduce arbitrary cuts,
% however, without having to introduce, say, a chapter heading. This means
% that we have to supply the `no-cut` option and essentially redo it all
% from scratch… which is what this code is.

\makeatletter

% This lets us call `\newepubpage` anywhere to induce a cut.
\NewSection\@newepubpage{}
\Configure{@newepubpage}
    {\ifvmode\IgnorePar\fi\EndP} % Before the crosslinks.
    {\IgnorePar} % Appears to be added somewhere to the table of contents (if this section is added thereto).
    {} % Is placed before the content of `\@newepubpage{content}`, but…
    {} % Is placed after the content of `\@newepubpage{content}`, but…
    % I tried to set these to `\HCode{<!--}` and `\HCode{-->}` respectively,
    % but that caused the paragraph to lose its ID and instead have the ID
    % of the contained span applied. Very strange. Something’s going on. 

% Why do we introduce this level of indirection?
%   1) Because it’s weird to have to write `\newepubpage{}` instead of
%      `\newepubpage`.
%   2) Because the hooks are a bit weirdly placed and we want to make sure to
%      be able to `display: none` the paragraph seemingly unavoidably added
%      when using a command defined with `\NewSection`. The argument turns
%      into the paragraph’s ID, so we want it to be the same every time
%      (`pagebreak`, in this case).
% There may be a more elegant way to do this, but eh.
% The reason we’re doing provide + renew instead of just new is that we’re also
% providing it for the PDF version, so the command may pre-exist, but we want
% to overwrite it in that case. (I didn’t know this was executed *after* the
% document preamble!)
\ProvideDocumentCommand{\newepubpage}{}{}
\RenewDocumentCommand{\newepubpage}{}{\@newepubpage{pagebreak}}

\csgappto{c:@newepubpage}{\OpfRegisterFile}%
\csgappto{c:part}{\OpfRegisterFile}%
\csgappto{c:likepart}{\OpfRegisterFile}%
\csgappto{c:chapter}{\OpfRegisterFile}%
\csgappto{c:likechapter}{\OpfRegisterFile}%
\csgappto{c:section}{\OpfRegisterFile}%
\csgappto{c:likesection}{\OpfRegisterFile}%
\CutAt{@newepubpage,@newepubpage,part,likepart,chapter,likechapter,section,likesection}
\CutAt{part,@newepubpage,part,likepart,chapter,likechapter,section,likesection}
\CutAt{likepart,@newepubpage,part,likepart,chapter,likechapter,section,likesection}
\CutAt{chapter,@newepubpage,part,likepart,chapter,likechapter,section,likesection}
\CutAt{likechapter,@newepubpage,part,likepart,chapter,likechapter,section,likesection}
\CutAt{section,@newepubpage,part,likepart,chapter,likechapter,section,likesection}
\CutAt{likesection,@newepubpage,part,likepart,chapter,likechapter,section,likesection}

\makeatother


% === Hacks and Workarounds ===

% Ensure that navigation matches the in-book table of contents.
% A somewhat intricate workaround.
% (After this, the table of content needs to have its HTML adjusted in
% `configuration/xhtml-code.cfg`.)
% https://tex.stackexchange.com/a/742180/392788

% Replace LaTeX’s `\tableofcontents` (which doesn’t record `\chapter*`s)
% with TeX4Ht’s automatic `\TableOfContents` (which can).
\renewcommand\tableofcontents{%
    \TableOfContents[part,likepart,chapter,likechapter,section,likesection,subsection,likesubsection]%
}


% Section break workarounds.

% Needed to unindent the paragraph after a section break.
\Configure{sectionbreak}
    {\ifvmode\IgnorePar\fi\EndP\HCode{<div class="sectionbreak"><br/><br/>}}
    {\HCode{<br/><br/><br/></div>}\par\noindent\IgnorePar}

% Needed at the time of writing to fix asterisms, until the fix makes it into
% distributions. See the comments of:
% https://tex.stackexchange.com/a/748515/392788
\Configure{asterism}
    {\HCode{\string&\csname :sharp\endcsname x2042;}}




% === Footnotes ===

\newcommand{\footnotehtmlid}{fn\FNnum x\minipageNum}

% The footnote mark that appears in the main text.
\Configure{footnotemark}
    {%
        \HCode{<sup class="footnote-mark">}%
        \ifTag{\footnotehtmlid-bk}
            {%
                \expandafter\ifx\csname (\footnotehtmlid-bk)\endcsname\def
                    \Link[ class="footnote-link" epub:type="noteref"]{\footnotehtmlid}{}%       
                \else
                    \Link[ class="footnote-link" epub:type="noteref"]{\footnotehtmlid}{\footnotehtmlid-bk}%
                \fi
            }
            {%
                \expandafter\ifx\csname (\footnotehtmlid-bk)\endcsname\def
                \else \Link{}{\footnotehtmlid}\fi
            }%
        \NoFonts%
        \Tag{\footnotehtmlid}{}%
        [%
    }{%
        ]%
        \EndNoFonts%
        \ifTag{\footnotehtmlid-bk}
            {\EndLink}
            {%
                \expandafter\ifx\csname (\footnotehtmlid-bk)\endcsname\def
                \else \EndLink\fi
            }%
        \HCode{</sup>}%
        \expandafter\global\expandafter%
        \let\csname (\footnotehtmlid-bk)\endcsname\def%
    }


% The footnote itself.
% At the time of writing, there’s a bug in TeX4ht that makes the KOMA-Script
% class `scrbook` break multi-paragraph footnotes. Let’s hope that gets fixed.
% https://tex.stackexchange.com/questions/682173/
\catcode`:=11 % Needed because we’re not inside a `.4ht` file.
\Configure{footnotetext}
    {% Before footnote marker.
        \SaveEndP\global\setbox\fn:box=\vtop\bgroup\ShowPar%
        \ifvoid\fn:box\else  \csname unvbox\endcsname\fn:box\fi%
        %
        \ifvmode\IgnorePar\fi\EndP%
        \HCode{<aside id="\footnotehtmlid" class="footnote" epub:type="footnote">}%
        \IgnoreIndent\par%
        %
        \ifTag{\footnotehtmlid}{%
            % Here we have an if with two identical branches, which should
            % be easy to refactor out, *but* I don’t fully understand the
            % `\expandafter` + `\def` (followed by nothing…?) situation, *so*
            % I’ll leave it be for the moment. It works!
            \expandafter\ifx\csname (\footnotehtmlid)\endcsname\def
                \Link{\footnotehtmlid-bk}{}%
            \else
                \Link{\footnotehtmlid-bk}{}%
            \fi
        }{%
            \expandafter\ifx\csname (\footnotehtmlid)\endcsname\def
            \else \Link{}{}\fi
        }%
        \NoFonts
        \Tag{\footnotehtmlid-bk}{}%
        \special{t4ht@(}%
    }
    {% Between footnote marker and text.
        \special{t4ht@)}\EndNoFonts%
        \ifTag{\footnotehtmlid}
            {\EndLink}
            {%
                \expandafter\ifx\csname (\footnotehtmlid)\endcsname\def
                \else \EndLink\fi
            }%
        \space%
    }
    {% After footnote.
        \expandafter\global\expandafter
            \let\csname (\footnotehtmlid)\endcsname\def
        \EndP%
        \HCode{</aside>\Hnewline}%
        \egroup\RecallEndP%
        %
        % Needed to work around a bug that appears in conjunction with
        % KOMA-Script’s `scrbook` class.
        % https://tex.stackexchange.com/a/682211/392788
        \ShowPar%
    }
\catcode`:=12
